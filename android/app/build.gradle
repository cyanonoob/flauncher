/*
 * FLauncher
 * Copyright (C) 2021  Ã‰tienne Fesser
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */



plugins {
    id "com.android.application"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}



def envProperties = new Properties()
def envFile = rootProject.file('.env')
if (envFile.exists()) {
    envFile.withReader('UTF-8') { reader ->
        reader.eachLine { line ->
            if (line && !line.startsWith('#')) {
                def idx = line.indexOf('=')
                if (idx > 0) {
                    def key = line.substring(0, idx).trim()
                    def value = line.substring(idx + 1).trim()
                    // Remove quotes if present
                    if (value.startsWith('"') && value.endsWith('"')) {
                        value = value.substring(1, value.length() - 1)
                    }
                    envProperties.setProperty(key, value)
                }
            }
        }
    }
}

android {
    defaultConfig {
        applicationId "com.geert.flauncher"
        compileSdk 35
        minSdkVersion flutter.minSdkVersion
        targetSdk 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    flavorDimensions "app"
    productFlavors {
        development {
            dimension "app"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }
        production {
            dimension "app"
        }
    }

    signingConfigs {
        debug {}
        release {
            storeFile file("upload-keystore.keystore")
            storePassword envProperties.getProperty("FLAUNCHER_KEYSTORE_PASSWORD")
            keyAlias envProperties.getProperty("FLAUNCHER_SIGNING_KEY_ALIAS")
            keyPassword envProperties.getProperty("FLAUNCHER_SIGNING_KEY_PASSWORD")
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    splits {
        abi {
            // https://stackoverflow.com/a/39950584/21037183
            enable gradle.startParameter.taskNames.any { it.contains("assembleRelease") }
            universalApk true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }



    namespace 'com.geert.flauncher'
}

flutter {
    source '../..'
}
